source("complete.R")
directory <- "specdata/"
complete(directory, 1)
source("complete.R")
complete(directory, 1)
?data.frame
masterDF <- data.frame(row.names = c("id", "nobs"))
masterDF
str(masterDF)
rbind(masterDF, c(1, 3))
masterDF <- data.frame(col.names = c("id", "nobs"))
masterDF
rm(masterDF)
masterDF <- data.frame()
colnames(masterDF) <- c("id", "nobs")
str(masterDF)
rbind(masterDF, data.frame("id" = 1, "nobs" = 116))
temp
rm(temp)
temp <- read.csv("specdata/001.csv", header=TRUE)
str(temp)
temp[complete.cases(temp), ]
length(temp[complete.cases(temp), ])
nrow(temp[complete.cases(temp), ])
source("complete.R")
complete(directory, 1)
source("complete.R")
complete(directory, 1)
complete(directory, 3)
complete(directory, 30:25)
complete(directory, c(2, 4, 8, 10, 12))
submit()
submit()
submit()
id <- c(2,4,8,10,12)
master.df <- data.frame()
for(file in list.files(directory, pattern = ".csv")[id]){
file.path <- paste(directory, file, sep="/")
temp <- read.csv(file.path, header=TRUE)
temp <- temp[complete.cases(temp),]
nobs <- nrow(temp)
new.df <- data.frame("id" = id, "nobs" = nobs)
master.df <- rbind(master.df, new.df)
}
str(master.df)
list.files(directory, pattern = ".csv")[id]
for(file in list.files(directory, pattern = ".csv")[id]){
print(file)
}
id <-30:25
for(file in list.files(directory, pattern = ".csv")[id]){
print(file)
}
master.df <- data.frame()
for(file in list.files(directory, pattern = ".csv")[id]){
file.path <- paste(directory, file, sep="/")
temp <- read.csv(file.path, header=TRUE)
temp <- temp[complete.cases(temp),]
nobs <- nrow(temp)
}
nobs
master.df <- data.frame()
for(file in list.files(directory, pattern = ".csv")[id]){
file.path <- paste(directory, file, sep="/")
temp <- read.csv(file.path, header=TRUE)
temp <- temp[complete.cases(temp),]
nobs <- nrow(temp)
print(nobs)
}
master.df <- data.frame()
for(file in list.files(directory, pattern = ".csv")[id]){
file.path <- paste(directory, file, sep="/")
temp <- read.csv(file.path, header=TRUE)
temp <- temp[complete.cases(temp),]
nobs <- nrow(temp)
print(nobs)
print(id)
}
master.df <- data.frame()
for(file in list.files(directory, pattern = ".csv")[id]){
file.path <- paste(directory, file, sep="/")
temp <- read.csv(file.path, header=TRUE)
temp <- temp[complete.cases(temp),]
nobs <- nrow(temp)
print(nobs)
print(id[i])
}
master.df <- data.frame()
for(file in list.files(directory, pattern = ".csv")[id]){
i=1
file.path <- paste(directory, file, sep="/")
temp <- read.csv(file.path, header=TRUE)
temp <- temp[complete.cases(temp),]
nobs <- nrow(temp)
print(nobs)
print(id[i])
i+=1
}
i=1
i++1
rm(i)
master.df <- data.frame()
for(file in list.files(directory, pattern = ".csv")[id]){
i=1
file.path <- paste(directory, file, sep="/")
temp <- read.csv(file.path, header=TRUE)
temp <- temp[complete.cases(temp),]
nobs <- nrow(temp)
print(nobs)
print(id[i])
i++1
}
master.df <- data.frame()
for(file in list.files(directory, pattern = ".csv")[id]){
i=1
file.path <- paste(directory, file, sep="/")
temp <- read.csv(file.path, header=TRUE)
temp <- temp[complete.cases(temp),]
nobs <- nrow(temp)
print(nobs)
print(id[i])
i++1
}
master.df <- data.frame()
for(file in list.files(directory, pattern = ".csv")[id]){
i=1
file.path <- paste(directory, file, sep="/")
temp <- read.csv(file.path, header=TRUE)
temp <- temp[complete.cases(temp),]
nobs <- nrow(temp)
print(nobs)
print(id[i])
i++1
}
master.df <- data.frame()
for(file in list.files(directory, pattern = ".csv")[id]){
i=1
file.path <- paste(directory, file, sep="/")
temp <- read.csv(file.path, header=TRUE)
temp <- temp[complete.cases(temp),]
nobs <- nrow(temp)
print(nobs)
print(id[i])
print(i)
i++1
}
master.df <- data.frame()
i=1
for(file in list.files(directory, pattern = ".csv")[id]){
file.path <- paste(directory, file, sep="/")
temp <- read.csv(file.path, header=TRUE)
temp <- temp[complete.cases(temp),]
nobs <- nrow(temp)
print(nobs)
print(id[i])
print(i)
i++1
}
i
i++1
i
master.df <- data.frame()
i=1
for(file in list.files(directory, pattern = ".csv")[id]){
file.path <- paste(directory, file, sep="/")
temp <- read.csv(file.path, header=TRUE)
temp <- temp[complete.cases(temp),]
nobs <- nrow(temp)
print(nobs)
print(id[i])
print(i)
i<-i++1
}
source("complete.R")
complete(directory, 1)
complete(directory, 30:25)
complete(directory, 3)
complete(directory, c(2,4,8,10,12))
submit()
submit()
?append
str(temp)
rm(master.df, masterDF, master.v)
rm(masterV)
str(new.df)
rm(new.df)
rm(temp)
str(y)
rm(y)
temp <- read.csv("specdata/001.csv", header=TRUE)
str(temp)
nrow(temp[complete.cases(temp),])
corr(temp[sulfate], temp[nitrate])
?cor
str(temp[sulfate])
str(temp["sulfate"])
cor(temp$sulfate, temp$nitrate)
new.temp <- temp[complete.cases(temp),]
cor(new.temp$sulfate, new.temp$nitrate)
cor(new.temp$nitrate, new.temp$sulfate)
source("corr.R")
corr(directory, 0)
corr(directory, 150)
master.v <- c()
for(file in list.files(directory, pattern = ".csv")){
file.path <- paste(directory, file, sep="/")
temp <- read.csv(file.path, header=TRUE)
temp <- temp[complete.cases(temp),]
nobs <- nrow(temp)
if(nobs > threshold){
correlation <- cor(temp$sulfate, temp$nitrate)
append(master.v, correlation)
}
else {}
}
master.v
threshold <- 150
master.v <- c()
for(file in list.files(directory, pattern = ".csv")){
file.path <- paste(directory, file, sep="/")
temp <- read.csv(file.path, header=TRUE)
temp <- temp[complete.cases(temp),]
nobs <- nrow(temp)
if(nobs > threshold){
correlation <- cor(temp$sulfate, temp$nitrate)
append(master.v, correlation)
}
else {}
}
master.v
directory
for(file in list.files(directory, pattern =".csv")){
print(file)
}
master.v <- c()
for(file in list.files(directory, pattern = ".csv")){
file.path <- paste(directory, file, sep="/")
temp <- read.csv(file.path, header=TRUE)
temp <- temp[complete.cases(temp),]
nobs <- nrow(temp)
print(nobs)
if(nobs > threshold){
correlation <- cor(temp$sulfate, temp$nitrate)
append(master.v, correlation)
}
else {}
}
master.v
master.v <- c()
for(file in list.files(directory, pattern = ".csv")){
file.path <- paste(directory, file, sep="/")
temp <- read.csv(file.path, header=TRUE)
temp <- temp[complete.cases(temp),]
nobs <- nrow(temp)
if(nobs > threshold){
print(nobs)
}
else {}
}
master.v
new <-c()
new
rm(new)
nobs
append(master.v, nobs)
master.v
master.v <- c()
for(file in list.files(directory, pattern = ".csv")){
file.path <- paste(directory, file, sep="/")
temp <- read.csv(file.path, header=TRUE)
temp <- temp[complete.cases(temp),]
nobs <- nrow(temp)
print(nobs)
if(nobs > threshold){
correlation <- cor(temp$sulfate, temp$nitrate)
master.v <- append(master.v, correlation)
}
else {}
}
master.v
master.v <- c()
for(file in list.files(directory, pattern = ".csv")){
file.path <- paste(directory, file, sep="/")
temp <- read.csv(file.path, header=TRUE)
temp <- temp[complete.cases(temp),]
nobs <- nrow(temp)
if(nobs > threshold){
correlation <- cor(temp$sulfate, temp$nitrate)
master.v <- append(master.v, correlation)
}
else {}
}
head(master.v)
source("corr.R")
cr <- corr(directory, 150)
head(cr)
summary(cr)
cr <- corr(directory, 1500)
head(cr)
class(cr)
new <- as.numeric(c())
class(new)
new
submit()
submit()
submit()
submit()
cr <- corr(directory, 400)
head(cr)
summary(cr)
cr <- corr(directory, 5000)
summary(cr)
length(cr)
cr <- corr(directory)
round(summary(cr), 4)
length(cr)
?round
trunc(5.2)
trunc(5.2, 2)
trunc(5.2, 3)
trunc(0.2, 3)
submit()
test <- function(x) {
for(x > 0) {
message("getting for loop")
return(3)
}
return(4)
}
test
cachemean <- function(x, ...) {
m <- x$getmean()
if(!is.null(m)) {
message("getting cached data")
return(m)
}
data <- x$get()
m <- mean(data, ...)
x$setmean(m)
m
}
test <- function(x) {
for(x > 0) {
message("getting for loop")
return(3)
}
return(4)
}
cachemean <- function(x) {
if(x > 0) {
message("getting cached data")
}
data <- x$get()
}
cachemean <- function(x) {
if(x > 0) {
message("getting cached data")
return(3)
}
return(4)
}
cachemean
x <- 5
cachemean(x)
cachemean <- function(x) {
if(x > 0) {
message("getting cached data")
return(3)
}
4
}
cachemean(x)
cachemean <- function(x) {
if(x > 0) {
message("getting cached data")
3
}
4
}
cachemean(x)
rm(cachemean)
source("R Programming/ProgrammingAssignment2/")
source("R Programming/ProgrammingAssignment2/cachematrix.R")
x <- matrix(c(1:4, 9, 2, 5, 5, 3), nrow= 3, ncol = 3)
x
makeCacheMatrix(x)
makeCacheMatrix(x)->z
cacheSolve(z)
cacheSolve(z) -> y
y %*% z
y %*% z$get()
round(.Last.value)
z$get() %*% y
source("R Programming/ProgrammingAssignment2/cachematrix.R")
makeCacheMatrix(x)->z
cacheSolve(z) -> y
z$get() %*% y
y %*% z$get()
setwd("Getting and Cleaning Data/Quiz2/")
acs <- read.csv("getdata-data-ss06pid.csv", header = TRUE)
str(acs)
install.packages("sqldf")
require(sqldf)
sqldf("select * from acs where AGEP < 50 and pwgtp1")
sqldf("select pwgtp1 from acs where AGEP < 50")
str(sqldf("select pwgtp1 from acs where AGEP < 50"))
sqldf("select * from acs where AGEP < 50")
sqldf("select pwgtp1 from acs")
str(sqldf("select pwgtp1 from acs"))
str(sqldf("select * from acs where AGEP < 50 and pwgtp1"))
sqldf("select * from acs where AGEP < 50 and pwgtp1")
str(sqldf("select pwgtp1 from acs where AGEP < 50"))
sqldf("select * from acs where pwgtp1")
sqldf("select pwgtp1 from acs")
str(sqldf("select pwgtp1 from acs"))
sqldf("select pwgtp1 from acs where AGEP < 50")
acs
sqldf("select * from acs where AGEP < 50 and pwgtp1")
unique(acs$AGEP)
unique(acs$AGEP) -> temp
sqldf("select unique AGEP from acs")
sqldf("select AGEP where unique from acs")
sqldf("select distinct AGEP from acs")
sqldf("select distinct AGEP from acs")  -> temp2
identical(temp, temp2)
sqldf("select unique * from acs")
filename <- "getdata-wksst8110.for"
mew <- read.fortran(filename)
?read.fortran
mew <- read.fortran(filename, format = "character")
mew
?read.fwf
mew <- read.fwf(filename, widths=2)
mew
mew <- read.fwf(filename, widths=4)
mew
str(mew)
filename
head(filename)
mew <- read.fwf(filename, widths=3)
mew
mew <- read.fwf(filename, widths=3, sep = "\t")
mew
mew <- read.fwf(filename, widths=9, sep = "\t")
mew
mew <- read.fwf(filename, widths=9, sep = "\t", header = FALSE, skip = 0, n=-1)
mew
mew <- read.fwf(filename, widths = c(9, -5, 4, -1, 3, -5, 4, -1, 3, -5, 4, -1, 3, -5, 4, -1, 3,), sep = "\t")
mew <- read.fwf(filename, widths = c(9, -5, 4, -1, 3, -5, 4, -1, 3, -5, 4, -1, 3, -5, 4, -1, 3), sep = "\t")
mew
mew <- read.fwf(filename, widths = c(10, -5, 5, -1, 4, -5, 5, -1, 4, -5, 5, -1, 4, -5, 5, -1, 4), sep = "\t")
mew
mew <- read.fwf(filename, widths = c(10, -5, 5, 4, -5, 5, -1, 4, -5, 5, -1, 4, -5, 5, -1, 4), sep = "\t")
mew
str(mew)
mew
mew <- read.fwf(filename, widths = c(10, 5, 4, -5, 5, -1, 4, -5, 5, -1, 4, -5, 5, -1, 4), sep = "\t")
mew
read.fwf(filename, widths = c(10, 5, 3, -5, 5, -1, 4, -5, 5, -1, 4, -5, 5, -1, 4), sep = "\t")
read.fwf(filename, widths = c(10, 5, 4, -5, 5, -1, 4, -5, 5, -1, 4, -5, 5, -1, 4), sep = "\t")
read.fwf(filename, widths = c(10, 5, 3, -5, 5, -1, 4, -5, 5, -1, 4, -5, 5, -1, 4), sep = "\t")
read.fwf(filename, widths = c(10, 5, 4, -5, 5, -1, 4, -5, 5, -1, 4, -5, 5, -1, 4), sep = "\t")
read.fwf(filename, widths = c(10, 5, 3, 4, 3, 4, 3, 4, 3))
read.fwf(filename, widths = c(10, 6, 3, 4, 3, 4, 3, 4, 3))
read.fwf(filename, widths = c(10, 5, 3, 4, 3, 4, 3, 4, 3))
read.fwf(filename, widths = c(10, 4, 3, 4, 3, 4, 3, 4, 3))
read.fwf(filename, widths = c(10, 5, 3, 4, 3, 4, 3, 4, 3))
read.fwf(filename, widths = c(10, 4, 3, 4, 3, 4, 3, 4, 3))
read.fwf(filename, widths = c(10, 4, 2, 4, 3, 4, 3, 4, 3))
read.fwf(filename, widths = c(10, 4, 4, 4, 3, 4, 3, 4, 3))
read.fwf(filename, widths = c(10, 4, -1, 3, 4, 3, 4, 3, 4, 3))
head(read.fwf(filename, widths = c(10, 4, -1, 3, 4, 3, 4, 3, 4, 3)))
head(read.fwf(filename, widths = c(10, 4, -1, 3, 4, 3, 4, 3, 4, 3), header = TRUE))
head(read.fwf(filename, widths = c(10, 4, -1, 3, 4, 3, 4, 3, 4, 3), header = FALSE))
head(read.fwf(filename, widths = c(10, 4, -1, 3, 4, 3, 4, 3, 4, 3), header = FALSE, skip = 2))
head(read.fwf(filename, widths = c(10, 4, -1, 3, 4, 3, 4, 3, 4, 3), header = FALSE, skip = 3))
head(read.fwf(filename, widths = c(10, -5, 4, -1, 3, 4, 3, 4, 3, 4, 3), header = FALSE, skip = 3))
head(read.fwf(filename, widths = c(10, -5, 4, -1, 3, -5, 4, 3, 4, 3, 4, 3), header = FALSE, skip = 3))
head(read.fwf(filename, widths = c(10, -5, 4, -1, 3, -5, 4, -1, 3, -5, 4, 3, 4, 3), header = FALSE, skip = 3))
head(read.fwf(filename, widths = c(10, -5, 4, -1, 3, -5, 4, -1, 3, -5, 4, -1, 3), header = FALSE, skip = 3))
head(read.fwf(filename, widths = c(10, -5, 4, -1, 3, -5, 4, -1, 3, -5, 4, -1, 3), header = FALSE, skip = 4))
head(read.fwf(filename, widths = c(10, -5, 4, -1, 3, -5, 4, -1, 3, -5, 4, -1, 3, -5, 4, -1, 3), header = FALSE, skip = 4))
mew <- read.fwf(filename, widths = c(10, -5, 4, -1, 3, -5, 4, -1, 3, -5, 4, -1, 3, -5, 4, -1, 3), header = FALSE, skip = 4)
mew
str(mew)
mew[4]
sum(mew[4])
urlpath <- "http://biostat.jhsph.edu/~jleek/contact.html"
urlpath
download.file(urlpath, method = "curl")
download.file(urlpath, method = "curl", destfile = "./biostat.csv")
head("biostat.csv")
temp <- read.csv("biostat.csv")
temp
require(XML)
?xml
rm(temp)
download.file(urlpath, method = "curl", destfile = "./biostat.xml")
xmlParse("biostat.xml")
urlpath
con = url(urlpath)
htmlCode = readLines(con)
close(con)
htmlCode
htmlCode[2]
nchar(htmlCode[2])
nchar(htmlCode[10])
nchar(htmlCode[20])
nchar(htmlCode[30])
nchar(htmlCode[100])
?ceiling
ceiling(13/(ceiling(13/20) +1))
